/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import controlBD.DAOUniversalHibernate;
import herramienta.FechaHerramienta;
import herramienta.FormatoTabla;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyVetoException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import pojos.Clientes;
import pojos.Diariocaja;
import pojos.Linea;
import pojos.Proveedores;
import pojos.Sucursal;

/**
 *
 * @author Daniel
 */
public class DiarioDeCaja extends javax.swing.JInternalFrame {

    private String fechaInicio = "";
    private String fechaFin = "";
    private String tiendaAbono = "";
    private String HQL = "";

    public DiarioDeCaja() {
        initComponents();
        jdcFechaRegistroDiario.setDate(new Date());
        jdcFechaCorreccionInicio.setDate(new Date());
        jdcFechaCorreccionFin.setDate(new Date());
        jdcFechaInicioResumen.setDate(new Date());
        jdcFechaFinResumen.setDate(new Date());

        //ASIGNA ACCIONES A LOS COMBOS Y CALENDARIOS
        addActions();
        //FORMATO DE COLORES Y FUENTES PARA LAS TABLAS
        jtTablaDiarioCorrecion.setDefaultRenderer(Object.class, new FormatoTabla());
        jtTablaDiarioRegistro.setDefaultRenderer(Object.class, new FormatoTabla());
        //EVENTO DOBLE CLIC PARA REFRESCAR LAS TABLAS
        setEventoMouseClicked(jtTablaDiarioCorrecion, "Diariocaja");
    }

    //EVENTO DOBLE CLIC PARA REFRESCAR LAS TABLAS
    private void setEventoMouseClicked(JTable tabla, String esDiariocajaOVenta) {
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    if (esDiariocajaOVenta.equals("Diariocaja")) {
                        crearConsultaGlobal();
                        cargaTabla(tabla, HQL, "Diariocaja");
                    }

                }

            }
        });
    }

    public boolean exist(JInternalFrame frame) throws Exception {

        try {
            JInternalFrame iframes[] = CPanel.desktop.getAllFrames();
            for (int i = 0; i < iframes.length; i++) {
                if (iframes[i].getTitle().equals(frame.getTitle())) {
                    iframes[i].moveToFront();
                    iframes[i].setSelected(true);
                    iframes[i].setLocation((CPanel.desktop.getWidth() - iframes[i].getWidth()) / 2,
                            (CPanel.desktop.getHeight() - iframes[i].getHeight()) / 2);
                    return true;
                }
            }
        } catch (Exception e) {
            throw e;
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jtpDiario = new javax.swing.JTabbedPane();
        jpCreditos = new javax.swing.JPanel();
        lblLocal = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jdcFechaRegistroDiario = new com.toedter.calendar.JDateChooser();
        txtVentaConNota = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtTablaDiarioRegistro = new javax.swing.JTable();
        btnAnotar = new javax.swing.JButton();
        btnRegistrarVentas = new javax.swing.JButton();
        btnBorrarCredito = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtNotas = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lblLocal1 = new javax.swing.JLabel();
        txtVentaSinNota = new javax.swing.JTextField();
        lblLocal3 = new javax.swing.JLabel();
        txtCredito = new javax.swing.JTextField();
        lblLocal4 = new javax.swing.JLabel();
        txtGastosDeVenta = new javax.swing.JTextField();
        cmbConceptoLocales = new javax.swing.JComboBox();
        jpAbonos = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jdcFechaCorreccionInicio = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jdcFechaCorreccionFin = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtTablaDiarioCorrecion = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnSalirAbonos = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        btnPDFCreditos = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        btnCorregir = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        cmbDiarioCorregir = new javax.swing.JComboBox();
        jpResumen = new javax.swing.JPanel();
        btnSalirResumen = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jdcFechaInicioResumen = new com.toedter.calendar.JDateChooser();
        jLabel26 = new javax.swing.JLabel();
        jdcFechaFinResumen = new com.toedter.calendar.JDateChooser();
        jLabel31 = new javax.swing.JLabel();
        lblTituloResultados = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        lblVentasConNota = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        cmbTiendaResumen = new javax.swing.JComboBox();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        lblAbonosCredito = new javax.swing.JLabel();
        lblGastosDeVenta = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        lblTotalDeVentas = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        lblVentaSinNota = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel41 = new javax.swing.JLabel();
        lblUtilidadCajas = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jpConceptos = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtLocal = new javax.swing.JTable();
        jLabel48 = new javax.swing.JLabel();
        btnCorregirConcepto1 = new javax.swing.JButton();
        btnEliminarLocal = new javax.swing.JButton();
        jLabel86 = new javax.swing.JLabel();
        btnNuevoLocal = new javax.swing.JButton();
        txtLocalNuevo = new javax.swing.JTextField();
        jLabel87 = new javax.swing.JLabel();
        btnNuevoConcepto = new javax.swing.JButton();
        txtConceptoNuevo = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtConceptos = new javax.swing.JTable();
        jLabel88 = new javax.swing.JLabel();
        btnEditarConceptos = new javax.swing.JButton();
        btnBorrarConcepto = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jpProveedoresClientes = new javax.swing.JPanel();
        jsProvedorCliente = new javax.swing.JScrollPane();
        jtProveedor = new javax.swing.JTable();
        jLabel85 = new javax.swing.JLabel();
        btnCorregirProveedor = new javax.swing.JButton();
        btnEliminarProveedor = new javax.swing.JButton();
        jLabel89 = new javax.swing.JLabel();
        btnNuevoProveedor = new javax.swing.JButton();
        txtProveedorNuevo = new javax.swing.JTextField();
        jLabel90 = new javax.swing.JLabel();
        btnNuevoCliente = new javax.swing.JButton();
        txtClienteNuevo = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtClientes = new javax.swing.JTable();
        jLabel91 = new javax.swing.JLabel();
        btnEditarCliente = new javax.swing.JButton();
        btnBorrarCliente = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Diario de Caja");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jtpDiario.setForeground(new java.awt.Color(255, 102, 0));
        jtpDiario.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jtpDiario.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N

        jpCreditos.setBackground(new java.awt.Color(255, 255, 255));
        jpCreditos.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpCreditosComponentShown(evt);
            }
        });

        lblLocal.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblLocal.setForeground(new java.awt.Color(0, 102, 153));
        lblLocal.setText("VTAS CON NOTA");

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("FECHA");

        txtVentaConNota.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        txtVentaConNota.setForeground(new java.awt.Color(204, 0, 0));
        txtVentaConNota.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtVentaConNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtVentaConNotaKeyTyped(evt);
            }
        });

        jtTablaDiarioRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LOCAL", "FECHA", "NOTAS", "VTAS CON NOTA", "VTAS SIN NOTA", "AB. CREDITO", "GASTOS DE VENTA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtTablaDiarioRegistro);
        if (jtTablaDiarioRegistro.getColumnModel().getColumnCount() > 0) {
            jtTablaDiarioRegistro.getColumnModel().getColumn(1).setResizable(false);
            jtTablaDiarioRegistro.getColumnModel().getColumn(1).setPreferredWidth(50);
            jtTablaDiarioRegistro.getColumnModel().getColumn(2).setResizable(false);
            jtTablaDiarioRegistro.getColumnModel().getColumn(2).setPreferredWidth(50);
            jtTablaDiarioRegistro.getColumnModel().getColumn(3).setResizable(false);
            jtTablaDiarioRegistro.getColumnModel().getColumn(4).setResizable(false);
            jtTablaDiarioRegistro.getColumnModel().getColumn(5).setResizable(false);
            jtTablaDiarioRegistro.getColumnModel().getColumn(6).setResizable(false);
            jtTablaDiarioRegistro.getColumnModel().getColumn(6).setPreferredWidth(100);
        }

        btnAnotar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAnotar.setForeground(new java.awt.Color(0, 153, 51));
        btnAnotar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/list.png"))); // NOI18N
        btnAnotar.setText("Anotar");
        btnAnotar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnotarActionPerformed(evt);
            }
        });

        btnRegistrarVentas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRegistrarVentas.setForeground(new java.awt.Color(0, 153, 51));
        btnRegistrarVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/mas.png"))); // NOI18N
        btnRegistrarVentas.setText("Guardar");
        btnRegistrarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarVentasActionPerformed(evt);
            }
        });

        btnBorrarCredito.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBorrarCredito.setForeground(new java.awt.Color(0, 153, 51));
        btnBorrarCredito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/menos.png"))); // NOI18N
        btnBorrarCredito.setText("Quitar");
        btnBorrarCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarCreditoActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 102, 153));
        jLabel22.setText("Borrar notas");

        jLabel23.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 102, 153));
        jLabel23.setText("Guardar ");

        btnSalir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(0, 153, 51));
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/exit2.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 102, 153));
        jLabel20.setText("LOCAL");

        jLabel35.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 102, 153));
        jLabel35.setText("NOTAS");

        txtNotas.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        txtNotas.setForeground(new java.awt.Color(204, 0, 0));
        txtNotas.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblLocal1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblLocal1.setForeground(new java.awt.Color(0, 102, 153));
        lblLocal1.setText("VTAS SIN NOTA");

        txtVentaSinNota.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        txtVentaSinNota.setForeground(new java.awt.Color(204, 0, 0));
        txtVentaSinNota.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtVentaSinNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtVentaSinNotaKeyTyped(evt);
            }
        });

        lblLocal3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblLocal3.setForeground(new java.awt.Color(0, 102, 153));
        lblLocal3.setText("AB. CREDITO");

        txtCredito.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        txtCredito.setForeground(new java.awt.Color(204, 0, 0));
        txtCredito.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCredito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCreditoKeyTyped(evt);
            }
        });

        lblLocal4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblLocal4.setForeground(new java.awt.Color(0, 102, 153));
        lblLocal4.setText("GASTOS DE VENTA");

        txtGastosDeVenta.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        txtGastosDeVenta.setForeground(new java.awt.Color(204, 0, 0));
        txtGastosDeVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtGastosDeVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGastosDeVentaKeyTyped(evt);
            }
        });

        cmbConceptoLocales.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbConceptoLocales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbConceptoLocalesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCreditosLayout = new javax.swing.GroupLayout(jpCreditos);
        jpCreditos.setLayout(jpCreditosLayout);
        jpCreditosLayout.setHorizontalGroup(
            jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCreditosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCreditosLayout.createSequentialGroup()
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarCredito)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegistrarVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCreditosLayout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(jpCreditosLayout.createSequentialGroup()
                        .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNotas, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(cmbConceptoLocales, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpCreditosLayout.createSequentialGroup()
                                .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jdcFechaRegistroDiario, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblLocal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblLocal1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtVentaSinNota, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtVentaConNota, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpCreditosLayout.createSequentialGroup()
                                .addComponent(lblLocal3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblLocal4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpCreditosLayout.createSequentialGroup()
                                .addComponent(txtCredito, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAnotar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGastosDeVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(111, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCreditosLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );

        jpCreditosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jdcFechaRegistroDiario, txtVentaConNota});

        jpCreditosLayout.setVerticalGroup(
            jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCreditosLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel11))
                .addGap(8, 8, 8)
                .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jdcFechaRegistroDiario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbConceptoLocales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCreditosLayout.createSequentialGroup()
                        .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLocal)
                            .addComponent(jLabel35))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpCreditosLayout.createSequentialGroup()
                        .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLocal1)
                            .addComponent(lblLocal3)
                            .addComponent(lblLocal4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVentaSinNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVentaConNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGastosDeVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAnotar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jpCreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel22)
                    .addComponent(btnBorrarCredito)
                    .addComponent(btnRegistrarVentas)
                    .addComponent(jLabel23)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jtpDiario.addTab("Registro de diario", jpCreditos);

        jpAbonos.setBackground(new java.awt.Color(255, 255, 255));
        jpAbonos.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpAbonosComponentShown(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 102, 153));
        jLabel15.setText("Inicio");

        jLabel16.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 102, 153));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Fin");

        jtTablaDiarioCorrecion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FECHA", "NOTAS", "LOCAL", "VTAS SIN NOTA", "AB. CREDITO", "GASTOS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jtTablaDiarioCorrecion);
        if (jtTablaDiarioCorrecion.getColumnModel().getColumnCount() > 0) {
            jtTablaDiarioCorrecion.getColumnModel().getColumn(0).setResizable(false);
            jtTablaDiarioCorrecion.getColumnModel().getColumn(0).setPreferredWidth(150);
            jtTablaDiarioCorrecion.getColumnModel().getColumn(1).setResizable(false);
            jtTablaDiarioCorrecion.getColumnModel().getColumn(1).setPreferredWidth(100);
            jtTablaDiarioCorrecion.getColumnModel().getColumn(2).setResizable(false);
            jtTablaDiarioCorrecion.getColumnModel().getColumn(3).setResizable(false);
            jtTablaDiarioCorrecion.getColumnModel().getColumn(4).setResizable(false);
            jtTablaDiarioCorrecion.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 102));
        jLabel3.setText("Notas registradas");

        btnSalirAbonos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSalirAbonos.setForeground(new java.awt.Color(0, 153, 51));
        btnSalirAbonos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/exit2.png"))); // NOI18N
        btnSalirAbonos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirAbonosActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 102, 153));
        jLabel25.setText("Salir");

        btnPDFCreditos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/pdf.png"))); // NOI18N
        btnPDFCreditos.setText("PDF");
        btnPDFCreditos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFCreditosActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 102, 153));
        jLabel19.setText("Tienda");

        btnCorregir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/correct.png"))); // NOI18N
        btnCorregir.setText("Corregir");
        btnCorregir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCorregirActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/delete.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        cmbDiarioCorregir.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jpAbonosLayout = new javax.swing.GroupLayout(jpAbonos);
        jpAbonos.setLayout(jpAbonosLayout);
        jpAbonosLayout.setHorizontalGroup(
            jpAbonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAbonosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAbonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jpAbonosLayout.createSequentialGroup()
                        .addGroup(jpAbonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpAbonosLayout.createSequentialGroup()
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbDiarioCorregir, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdcFechaCorreccionInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jdcFechaCorreccionFin, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addGap(0, 105, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAbonosLayout.createSequentialGroup()
                        .addComponent(btnSalirAbonos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addGap(31, 31, 31)
                        .addComponent(btnPDFCreditos)
                        .addGap(373, 373, 373)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCorregir)))
                .addContainerGap())
        );

        jpAbonosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jdcFechaCorreccionFin, jdcFechaCorreccionInicio});

        jpAbonosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel15, jLabel16});

        jpAbonosLayout.setVerticalGroup(
            jpAbonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAbonosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAbonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel15)
                    .addComponent(jdcFechaCorreccionInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jdcFechaCorreccionFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(cmbDiarioCorregir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jpAbonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnSalirAbonos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(btnPDFCreditos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAbonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCorregir, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jtpDiario.addTab("Correcciones", jpAbonos);

        jpResumen.setBackground(new java.awt.Color(255, 255, 255));
        jpResumen.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpResumenComponentShown(evt);
            }
        });

        btnSalirResumen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSalirResumen.setForeground(new java.awt.Color(0, 153, 51));
        btnSalirResumen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/exit2.png"))); // NOI18N
        btnSalirResumen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirResumenActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 102, 153));
        jLabel27.setText("Salir");

        jLabel21.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 102, 153));
        jLabel21.setText("Inicio");

        jLabel26.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 102, 153));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("Fin");

        jLabel31.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 51, 102));
        jLabel31.setText("Establecer el periodo de tiempo trabajado");

        lblTituloResultados.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblTituloResultados.setForeground(new java.awt.Color(0, 51, 102));
        lblTituloResultados.setText("Resultados de");

        jLabel34.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 102, 153));
        jLabel34.setText("Ventas con nota");

        lblVentasConNota.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblVentasConNota.setForeground(new java.awt.Color(102, 102, 102));
        lblVentasConNota.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblVentasConNota.setText("0");
        lblVentasConNota.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel36.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 102, 153));
        jLabel36.setText("Tienda");

        cmbTiendaResumen.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        cmbTiendaResumen.setForeground(new java.awt.Color(0, 102, 153));
        cmbTiendaResumen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todas", "Cuaracurio 2", "La Comadre", "La Flor", "Local 2", "Local B3", "Local D7", "Local E15", "Moroleón", " " }));

        jLabel37.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 102, 153));
        jLabel37.setText("Abonos Crédito");

        jLabel38.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 102, 153));
        jLabel38.setText("Gastos de venta");

        lblAbonosCredito.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblAbonosCredito.setForeground(new java.awt.Color(102, 102, 102));
        lblAbonosCredito.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAbonosCredito.setText("0");
        lblAbonosCredito.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblGastosDeVenta.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblGastosDeVenta.setForeground(new java.awt.Color(102, 102, 102));
        lblGastosDeVenta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGastosDeVenta.setText("0");
        lblGastosDeVenta.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel39.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel39.setText("Total de ventas");

        lblTotalDeVentas.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblTotalDeVentas.setForeground(new java.awt.Color(102, 102, 102));
        lblTotalDeVentas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTotalDeVentas.setText("0");
        lblTotalDeVentas.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel40.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(0, 102, 153));
        jLabel40.setText("Ventas sin nota");

        lblVentaSinNota.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblVentaSinNota.setForeground(new java.awt.Color(102, 102, 102));
        lblVentaSinNota.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblVentaSinNota.setText("0");
        lblVentaSinNota.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jSeparator2.setForeground(new java.awt.Color(153, 0, 51));

        jLabel41.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel41.setText("Utilidad/Pérdida");

        lblUtilidadCajas.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblUtilidadCajas.setForeground(new java.awt.Color(102, 102, 102));
        lblUtilidadCajas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUtilidadCajas.setText("0");
        lblUtilidadCajas.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jSeparator3.setForeground(new java.awt.Color(153, 0, 51));

        javax.swing.GroupLayout jpResumenLayout = new javax.swing.GroupLayout(jpResumen);
        jpResumen.setLayout(jpResumenLayout);
        jpResumenLayout.setHorizontalGroup(
            jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpResumenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpResumenLayout.createSequentialGroup()
                        .addComponent(btnSalirResumen, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27))
                    .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpResumenLayout.createSequentialGroup()
                            .addComponent(jLabel31)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jdcFechaInicioResumen, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jdcFechaFinResumen, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpResumenLayout.createSequentialGroup()
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmbTiendaResumen, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpResumenLayout.createSequentialGroup()
                        .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblVentasConNota, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAbonosCredito, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpResumenLayout.createSequentialGroup()
                                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(lblGastosDeVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpResumenLayout.createSequentialGroup()
                                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(31, 31, 31)
                                    .addComponent(lblUtilidadCajas, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jpResumenLayout.createSequentialGroup()
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(lblVentaSinNota, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpResumenLayout.createSequentialGroup()
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(lblTotalDeVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(115, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpResumenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTituloResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(219, 219, 219))
        );
        jpResumenLayout.setVerticalGroup(
            jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpResumenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel21)
                    .addComponent(jdcFechaInicioResumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(jdcFechaFinResumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addGap(22, 22, 22)
                .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTiendaResumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addGap(18, 18, 18)
                .addComponent(lblTituloResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel34)
                    .addComponent(lblVentasConNota)
                    .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel38)
                        .addComponent(lblGastosDeVenta)))
                .addGap(9, 9, 9)
                .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpResumenLayout.createSequentialGroup()
                        .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(lblVentaSinNota))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37)
                            .addComponent(lblAbonosCredito)))
                    .addGroup(jpResumenLayout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41)
                            .addComponent(lblUtilidadCajas))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(lblTotalDeVentas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
                .addGroup(jpResumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(btnSalirResumen, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jtpDiario.addTab("Resumen de Diario", jpResumen);

        jpConceptos.setBackground(new java.awt.Color(255, 255, 255));
        jpConceptos.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpConceptosComponentShown(evt);
            }
        });

        jtLocal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave", "Local"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtLocal.setOpaque(false);
        jScrollPane4.setViewportView(jtLocal);

        jLabel48.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(0, 102, 153));
        jLabel48.setText("MIS LOCALES");

        btnCorregirConcepto1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCorregirConcepto1.setForeground(new java.awt.Color(0, 153, 51));
        btnCorregirConcepto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/correct.png"))); // NOI18N
        btnCorregirConcepto1.setText("Corregir");
        btnCorregirConcepto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCorregirConcepto1ActionPerformed(evt);
            }
        });

        btnEliminarLocal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEliminarLocal.setForeground(new java.awt.Color(0, 153, 51));
        btnEliminarLocal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/delete.png"))); // NOI18N
        btnEliminarLocal.setText("Eliminar");
        btnEliminarLocal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEliminarLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarLocalActionPerformed(evt);
            }
        });

        jLabel86.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel86.setForeground(new java.awt.Color(0, 102, 153));
        jLabel86.setText("ADMINISTRAS MIS LOCALES");

        btnNuevoLocal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNuevoLocal.setForeground(new java.awt.Color(0, 153, 51));
        btnNuevoLocal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/New.png"))); // NOI18N
        btnNuevoLocal.setText("Nuevo");
        btnNuevoLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoLocalActionPerformed(evt);
            }
        });

        jLabel87.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel87.setForeground(new java.awt.Color(0, 153, 0));
        jLabel87.setText("ADMINISTRAS MIS CONCEPTOS");

        btnNuevoConcepto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNuevoConcepto.setForeground(new java.awt.Color(0, 153, 51));
        btnNuevoConcepto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/New.png"))); // NOI18N
        btnNuevoConcepto.setText("Nuevo");
        btnNuevoConcepto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoConceptoActionPerformed(evt);
            }
        });

        txtConceptoNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConceptoNuevoActionPerformed(evt);
            }
        });

        jtConceptos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave", "Concepto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jtConceptos);

        jLabel88.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel88.setForeground(new java.awt.Color(0, 153, 0));
        jLabel88.setText("MIS CONCEPTOS");

        btnEditarConceptos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditarConceptos.setForeground(new java.awt.Color(0, 153, 51));
        btnEditarConceptos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/correct.png"))); // NOI18N
        btnEditarConceptos.setText("Corregir");
        btnEditarConceptos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarConceptosActionPerformed(evt);
            }
        });

        btnBorrarConcepto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBorrarConcepto.setForeground(new java.awt.Color(0, 153, 51));
        btnBorrarConcepto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/delete.png"))); // NOI18N
        btnBorrarConcepto.setText("Eliminar");
        btnBorrarConcepto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnBorrarConcepto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarConceptoActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/warehouse.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/shopcart.png"))); // NOI18N

        javax.swing.GroupLayout jpConceptosLayout = new javax.swing.GroupLayout(jpConceptos);
        jpConceptos.setLayout(jpConceptosLayout);
        jpConceptosLayout.setHorizontalGroup(
            jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConceptosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpConceptosLayout.createSequentialGroup()
                        .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jpConceptosLayout.createSequentialGroup()
                                .addComponent(txtLocalNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNuevoLocal))
                            .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jpConceptosLayout.createSequentialGroup()
                                    .addComponent(btnEliminarLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnCorregirConcepto1))
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jpConceptosLayout.createSequentialGroup()
                            .addComponent(txtConceptoNuevo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnNuevoConcepto))
                        .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpConceptosLayout.createSequentialGroup()
                                .addComponent(btnBorrarConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditarConceptos))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jpConceptosLayout.setVerticalGroup(
            jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConceptosLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpConceptosLayout.createSequentialGroup()
                        .addComponent(jLabel88)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNuevoConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtConceptoNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpConceptosLayout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpConceptosLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)))
                        .addComponent(jLabel87)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBorrarConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditarConceptos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpConceptosLayout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNuevoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocalNuevo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpConceptosLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)))
                        .addComponent(jLabel86)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpConceptosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminarLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCorregirConcepto1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jtpDiario.addTab("+CONCEPTOS", jpConceptos);

        jpProveedoresClientes.setBackground(new java.awt.Color(255, 255, 255));
        jpProveedoresClientes.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpProveedoresClientesComponentShown(evt);
            }
        });

        jtProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave", "Local"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtProveedor.setOpaque(false);
        jsProvedorCliente.setViewportView(jtProveedor);

        jLabel85.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel85.setForeground(new java.awt.Color(0, 102, 153));
        jLabel85.setText("MIS PROVEEDORES");

        btnCorregirProveedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCorregirProveedor.setForeground(new java.awt.Color(0, 153, 51));
        btnCorregirProveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/correct.png"))); // NOI18N
        btnCorregirProveedor.setText("Corregir");
        btnCorregirProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCorregirProveedorActionPerformed(evt);
            }
        });

        btnEliminarProveedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEliminarProveedor.setForeground(new java.awt.Color(0, 153, 51));
        btnEliminarProveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/delete.png"))); // NOI18N
        btnEliminarProveedor.setText("Eliminar");
        btnEliminarProveedor.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEliminarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProveedorActionPerformed(evt);
            }
        });

        jLabel89.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel89.setForeground(new java.awt.Color(0, 102, 153));
        jLabel89.setText("ADMINISTRAS MIS LOCALES");

        btnNuevoProveedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNuevoProveedor.setForeground(new java.awt.Color(0, 153, 51));
        btnNuevoProveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/New.png"))); // NOI18N
        btnNuevoProveedor.setText("Nuevo");
        btnNuevoProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoProveedorActionPerformed(evt);
            }
        });

        jLabel90.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel90.setForeground(new java.awt.Color(0, 153, 0));
        jLabel90.setText("ADMINISTRAS MIS CONCEPTOS");

        btnNuevoCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNuevoCliente.setForeground(new java.awt.Color(0, 153, 51));
        btnNuevoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/New.png"))); // NOI18N
        btnNuevoCliente.setText("Nuevo");
        btnNuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoClienteActionPerformed(evt);
            }
        });

        txtClienteNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteNuevoActionPerformed(evt);
            }
        });

        jtClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave", "Concepto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jtClientes);

        jLabel91.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel91.setForeground(new java.awt.Color(0, 153, 0));
        jLabel91.setText("MIS CLIENTES");

        btnEditarCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditarCliente.setForeground(new java.awt.Color(0, 153, 51));
        btnEditarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/correct.png"))); // NOI18N
        btnEditarCliente.setText("Corregir");
        btnEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarClienteActionPerformed(evt);
            }
        });

        btnBorrarCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBorrarCliente.setForeground(new java.awt.Color(0, 153, 51));
        btnBorrarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/delete.png"))); // NOI18N
        btnBorrarCliente.setText("Eliminar");
        btnBorrarCliente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnBorrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarClienteActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/Employee.png"))); // NOI18N

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/provider.png"))); // NOI18N

        javax.swing.GroupLayout jpProveedoresClientesLayout = new javax.swing.GroupLayout(jpProveedoresClientes);
        jpProveedoresClientes.setLayout(jpProveedoresClientesLayout);
        jpProveedoresClientesLayout.setHorizontalGroup(
            jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpProveedoresClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpProveedoresClientesLayout.createSequentialGroup()
                        .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jpProveedoresClientesLayout.createSequentialGroup()
                                .addComponent(txtProveedorNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNuevoProveedor))
                            .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jpProveedoresClientesLayout.createSequentialGroup()
                                    .addComponent(btnEliminarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnCorregirProveedor))
                                .addComponent(jsProvedorCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jpProveedoresClientesLayout.createSequentialGroup()
                            .addComponent(txtClienteNuevo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnNuevoCliente))
                        .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpProveedoresClientesLayout.createSequentialGroup()
                                .addComponent(btnBorrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditarCliente))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jpProveedoresClientesLayout.setVerticalGroup(
            jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpProveedoresClientesLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpProveedoresClientesLayout.createSequentialGroup()
                        .addComponent(jLabel91)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNuevoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtClienteNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpProveedoresClientesLayout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpProveedoresClientesLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)))
                        .addComponent(jLabel90)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBorrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpProveedoresClientesLayout.createSequentialGroup()
                        .addComponent(jLabel85)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNuevoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProveedorNuevo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jsProvedorCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpProveedoresClientesLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)))
                        .addComponent(jLabel89)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpProveedoresClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCorregirProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jtpDiario.addTab("+PROVEEDORES", jpProveedoresClientes);

        jPanel2.setBackground(new java.awt.Color(240, 79, 90));

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Diario de Caja por Tienda");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jtpDiario)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtpDiario))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnotarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnotarActionPerformed
        if (!txtVentaConNota.getText().isEmpty()
                && !txtVentaSinNota.getText().isEmpty()
                && !txtNotas.getText().isEmpty()
                && !txtCredito.getText().isEmpty()
                && !txtGastosDeVenta.getText().isEmpty()) {
            DefaultTableModel model = (DefaultTableModel) jtTablaDiarioRegistro.getModel();
            try {
                model.addRow(new String[]{
                    cmbConceptoLocales.getSelectedItem().toString(),
                    FechaHerramienta.formatoYMD(jdcFechaRegistroDiario.getDate()),
                    txtNotas.getText(),
                    txtVentaConNota.getText(),
                    txtVentaSinNota.getText(),
                    txtCredito.getText(),
                    txtGastosDeVenta.getText()});
                limpiarCreditos();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e, "Error", 0);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Hay campos vacios por favor llenalos todos", "Campos vacios", 1);
        }
    }//GEN-LAST:event_btnAnotarActionPerformed

    private void limpiarCreditos() {
        txtVentaConNota.setText("");
        txtVentaConNota.setEditable(true);
        txtGastosDeVenta.setText("");
        txtVentaSinNota.setText("");
        txtCredito.setText("");
        //jdcFechaRegistroDiario.setDate(new Date());
    }


    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        try {
            this.setClosed(true);
            System.gc();
        } catch (PropertyVetoException ex) {
            this.dispose();
            System.gc();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnRegistrarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarVentasActionPerformed

        if (jtTablaDiarioRegistro.getRowCount() > 0) {

            DAOUniversalHibernate controlBD = new DAOUniversalHibernate();
            Diariocaja venta = new Diariocaja();
            String fecha = "";
            for (int i = 0; i < jtTablaDiarioRegistro.getRowCount(); i++) {
                venta.setLocal(jtTablaDiarioRegistro.getValueAt(
                        i, 0).toString());
                fecha = jtTablaDiarioRegistro.getValueAt(i, 1).toString();
                venta.setFecha(FechaHerramienta.convertirStringEnDate(fecha));
                venta.setNotas(jtTablaDiarioRegistro.getValueAt(
                        i, 2).toString());
                String ventaConNota = jtTablaDiarioRegistro.getValueAt(i, 3).toString();
                venta.setVentaConNota(Double.parseDouble(ventaConNota));
                String ventaSinNota = jtTablaDiarioRegistro.getValueAt(i, 4).toString();
                venta.setVentaSinNota(Double.parseDouble(ventaSinNota));
                String ABCredito = jtTablaDiarioRegistro.getValueAt(i, 5).toString();
                venta.setAbonoCredito(Double.parseDouble(ABCredito));
                String gastoVenta = jtTablaDiarioRegistro.getValueAt(i, 6).toString();
                venta.setGastos(Double.parseDouble(gastoVenta));
                controlBD.add(venta);
            }
            limpiarCreditos();
            limpiarTablas(jtTablaDiarioRegistro);
            JOptionPane.showMessageDialog(this, "Registros guardados en la base de datos", "Registros guardados", 1);
        } else {
            JOptionPane.showMessageDialog(this, "No hay registros que guardar", "Sin registros", 1);
        }
    }//GEN-LAST:event_btnRegistrarVentasActionPerformed
    private void limpiarTablas(JTable jtTabla) {
        jtTabla.setVisible(false);
        //Obtengo el modelo
        DefaultTableModel modelo = (DefaultTableModel) jtTabla.getModel();
        //Borro las todas las rows
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        jtTabla.setVisible(true);
    }
    private void btnBorrarCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarCreditoActionPerformed
        if (jtTablaDiarioRegistro.getSelectedRow() > -1) {
            DefaultTableModel model = (DefaultTableModel) jtTablaDiarioRegistro.getModel();
            model.removeRow(jtTablaDiarioRegistro.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona un registro de la "
                    + "lista para poder borrar.", "Registro no seleccionado", 0);
        }
    }//GEN-LAST:event_btnBorrarCreditoActionPerformed

    private void jpAbonosComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpAbonosComponentShown
        crearConsultaGlobal();
        cargaTabla(jtTablaDiarioCorrecion, HQL, "Diariocaja");
        String query = "FROM Sucursal s ORDER BY s.nombre";
        llenarCombo(cmbDiarioCorregir, query, "local", true);
        //jdcFechaRegistroDiario.setDate(new Date());
        // jdcFechaCorreccionInicio.setDate(new Date());
        //jdcFechaCorreccionFin.setDate(new Date());
    }//GEN-LAST:event_jpAbonosComponentShown

    private void jpCreditosComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpCreditosComponentShown
        String query = "FROM Sucursal s ORDER BY s.nombre";
        llenarCombo(cmbConceptoLocales, query, "local", false);
        //jdcFechaRegistroDiario.setDate(new Date());
//        jdcFechaCorreccionInicio.setDate(new Date());
//        jdcFechaCorreccionFin.setDate(new Date());
        // TODO add your handling code here:
    }//GEN-LAST:event_jpCreditosComponentShown
    private void llenarCombo(JComboBox combo, String query, String tipoLista, boolean todas) {
        DAOUniversalHibernate acceso = new DAOUniversalHibernate();
        combo.removeAllItems();
        List listaItems = acceso.select(query);
        //combo = new JComboBox();
        if (listaItems.size() > 0) {
            try {
                //Crea la lista de categorias
                if (todas) {
                    combo.addItem("Todas");
                }

                for (int i = 0; i < listaItems.size(); i++) {
                    switch (tipoLista) {
                        case "concepto":
                            Linea concepto = (Linea) listaItems.get(i);
                            combo.addItem(concepto.getNombre());
                            break;
                        case "local":
                            Sucursal local = (Sucursal) listaItems.get(i);
                            combo.addItem(local.getNombre());
                            break;
                        case "proveedor":
                            Proveedores proveedor = (Proveedores) listaItems.get(i);
                            combo.addItem(proveedor.getNombre());
                            break;
                        case "cliente":
                            Clientes cliente = (Clientes) listaItems.get(i);
                            combo.addItem(cliente.getNombre());
                            break;
                    }

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "El error es:" + "\n" + e, "Error", 0);
            }
        }
    }
    private void btnSalirAbonosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirAbonosActionPerformed
        try {
            this.setClosed(true);
            System.gc();
        } catch (PropertyVetoException ex) {
            this.dispose();
            System.gc();
        }             // TODO add your handling code here:
    }//GEN-LAST:event_btnSalirAbonosActionPerformed

    private void crearConsultaGlobal() {
        fechaInicio = FechaHerramienta.formatoYMD(jdcFechaCorreccionInicio.getDate());
        fechaFin = FechaHerramienta.formatoYMD(jdcFechaCorreccionFin.getDate());

        tiendaAbono = cmbDiarioCorregir.getSelectedItem().toString();
        if (tiendaAbono.equals("Todas")) {
            HQL = "FROM Diariocaja d WHERE "
                    + "d.fecha BETWEEN '"
                    + fechaInicio + "' AND '"
                    + fechaFin + "' ORDER BY d.fecha";
        }
        if (!tiendaAbono.equals("Todas")) {
            HQL = "FROM Diariocaja d WHERE "
                    + " d.local = '"
                    + tiendaAbono
                    + "' AND d.fecha BETWEEN '"
                    + fechaInicio + "' AND '"
                    + fechaFin + "' ORDER BY d.fecha";
        }
    }

    public final void addActions() {

        final ItemListener changeClick = new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                if (cmbTiendaResumen.getItemCount() > 0) {
                    if (cmbTiendaResumen.getSelectedItem().equals(e.getItem())) {
                        crearResumen();
                    }
                }

            }
        };
        if (jdcFechaCorreccionInicio.isVisible()) {
            jdcFechaCorreccionInicio.getDateEditor().addPropertyChangeListener(new PropertyChangeListener() {
                public void propertyChange(PropertyChangeEvent e) {
                    crearConsultaGlobal();
                    cargaTabla(jtTablaDiarioCorrecion, HQL, "Diariocaja");
                }
            });
            jdcFechaCorreccionFin.getDateEditor().addPropertyChangeListener(new PropertyChangeListener() {
                public void propertyChange(PropertyChangeEvent e) {
                    crearConsultaGlobal();
                    cargaTabla(jtTablaDiarioCorrecion, HQL, "Diariocaja");
                }
            });
        }
        if (jdcFechaInicioResumen.isVisible()) {
            jdcFechaInicioResumen.getDateEditor().addPropertyChangeListener(new PropertyChangeListener() {
                public void propertyChange(PropertyChangeEvent e) {
                    crearResumen();
                }
            });
            jdcFechaFinResumen.getDateEditor().addPropertyChangeListener(new PropertyChangeListener() {
                public void propertyChange(PropertyChangeEvent e) {
                    crearResumen();
                }
            });
        }

        this.cmbTiendaResumen.addItemListener(changeClick);
    }

    private void crearResumen() {
        lblTituloResultados.setText("Resultados de " + cmbTiendaResumen.getSelectedItem().toString());
        lblTituloResultados.setVisible(false);
        lblTituloResultados.setVisible(true);
        double ventaConNota = getVentasConNota();
        lblVentasConNota.setText(String.valueOf(ventaConNota));
        double ventaSinNota = getVentasSinNota();
        lblVentaSinNota.setText(String.valueOf(ventaSinNota));
        double ventaAbonoCredito = getVentasAbonoCredito();
        lblAbonosCredito.setText(String.valueOf(ventaAbonoCredito));
        double gastosDeVenta = getGastosDeVenta();
        lblGastosDeVenta.setText(String.valueOf(gastosDeVenta));
        double totalVenta = ventaConNota + ventaSinNota + ventaAbonoCredito;
        lblTotalDeVentas.setText(String.valueOf(totalVenta));
        double utilidaPerdidaCaja = totalVenta - gastosDeVenta;
        lblUtilidadCajas.setText(String.valueOf(utilidaPerdidaCaja));
    }

//    private int getTiendasAbiertas() {
//        DAOUniversalHibernate acceso = new DAOUniversalHibernate();
//        String fechaInicioResumen = FechaHerramienta.formatoYMD(jdcFechaInicioResumen.getDate());
//        String fechaFinResumen = FechaHerramienta.formatoYMD(jdcFechaFinResumen.getDate());
//        String nombreTienda = cmbSucursalResumen.getSelectedItem().toString();
//        if (nombreTienda.equals("Todas")) {
//            HQL = "Select COUNT(d.local) FROM Diariocaja d WHERE "
//                    + "d.fecha BETWEEN '"
//                    + fechaInicioResumen + "' AND '"
//                    + fechaFinResumen + "'";
//            return acceso.rowCount(HQL);
//        } else {
//            HQL = "Select COUNT(d.local) FROM Diariocaja d WHERE "
//                    + "d.local = '"
//                    + nombreTienda
//                    + "' AND d.fecha BETWEEN '"
//                    + fechaInicioResumen + "' AND '"
//                    + fechaFinResumen + "'";
//            return acceso.rowCount(HQL);
//        }
//    }
    private double getVentasConNota() {
        DAOUniversalHibernate acceso = new DAOUniversalHibernate();
        String fechaInicioResumen = FechaHerramienta.formatoYMD(jdcFechaInicioResumen.getDate());
        String fechaFinResumen = FechaHerramienta.formatoYMD(jdcFechaFinResumen.getDate());
        String nombreTienda = cmbTiendaResumen.getSelectedItem().toString();
        if (nombreTienda.equals("Todas")) {
            HQL = "Select SUM(d.ventaConNota) FROM Diariocaja d WHERE "
                    + "d.fecha BETWEEN '"
                    + fechaInicioResumen + "' AND '"
                    + fechaFinResumen + "'";
            return acceso.sumRows(HQL);
        } else {
            HQL = "Select SUM(d.ventaConNota) FROM Diariocaja d WHERE "
                    + "d.local = '"
                    + nombreTienda
                    + "' AND d.fecha BETWEEN '"
                    + fechaInicioResumen + "' AND '"
                    + fechaFinResumen + "'";
            return acceso.sumRows(HQL);
        }
    }

    private double getVentasSinNota() {
        DAOUniversalHibernate acceso = new DAOUniversalHibernate();
        String fechaInicioResumen = FechaHerramienta.formatoYMD(jdcFechaInicioResumen.getDate());
        String fechaFinResumen = FechaHerramienta.formatoYMD(jdcFechaFinResumen.getDate());
        String nombreTienda = cmbTiendaResumen.getSelectedItem().toString();
        if (nombreTienda.equals("Todas")) {
            HQL = "Select SUM(d.ventaSinNota) FROM Diariocaja d WHERE "
                    + "d.fecha BETWEEN '"
                    + fechaInicioResumen + "' AND '"
                    + fechaFinResumen + "'";
            return acceso.sumRows(HQL);
        } else {
            HQL = "Select SUM(d.ventaSinNota) FROM Diariocaja d WHERE "
                    + "d.local = '"
                    + nombreTienda
                    + "' AND d.fecha BETWEEN '"
                    + fechaInicioResumen + "' AND '"
                    + fechaFinResumen + "'";
            return acceso.sumRows(HQL);
        }
    }

    private double getVentasAbonoCredito() {
        DAOUniversalHibernate acceso = new DAOUniversalHibernate();
        String fechaInicioResumen = FechaHerramienta.formatoYMD(jdcFechaInicioResumen.getDate());
        String fechaFinResumen = FechaHerramienta.formatoYMD(jdcFechaFinResumen.getDate());
        String nombreTienda = cmbTiendaResumen.getSelectedItem().toString();
        if (nombreTienda.equals("Todas")) {
            HQL = "Select SUM(d.abonoCredito) FROM Diariocaja d WHERE "
                    + "d.fecha BETWEEN '"
                    + fechaInicioResumen + "' AND '"
                    + fechaFinResumen + "'";
            return acceso.sumRows(HQL);
        } else {
            HQL = "Select SUM(d.abonoCredito) FROM Diariocaja d WHERE "
                    + "d.local = '"
                    + nombreTienda
                    + "' AND d.fecha BETWEEN '"
                    + fechaInicioResumen + "' AND '"
                    + fechaFinResumen + "'";
            return acceso.sumRows(HQL);
        }
    }

    private double getGastosDeVenta() {
        DAOUniversalHibernate acceso = new DAOUniversalHibernate();
        String fechaInicioResumen = FechaHerramienta.formatoYMD(jdcFechaInicioResumen.getDate());
        String fechaFinResumen = FechaHerramienta.formatoYMD(jdcFechaFinResumen.getDate());
        String nombreTienda = cmbTiendaResumen.getSelectedItem().toString();
        if (nombreTienda.equals("Todas")) {
            HQL = "Select SUM(d.gastos) FROM Diariocaja d WHERE "
                    + "d.fecha BETWEEN '"
                    + fechaInicioResumen + "' AND '"
                    + fechaFinResumen + "'";
            return acceso.sumRows(HQL);
        } else {
            HQL = "Select SUM(d.gastos) FROM Diariocaja d WHERE "
                    + "d.local = '"
                    + nombreTienda
                    + "' AND d.fecha BETWEEN '"
                    + fechaInicioResumen + "' AND '"
                    + fechaFinResumen + "'";
            return acceso.sumRows(HQL);
        }
    }

    private void btnPDFCreditosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFCreditosActionPerformed
        Map parametros = new HashMap();
        if (jtTablaDiarioCorrecion.getRowCount() > 0) {
            crearConsultaGlobal();
            java.sql.Date fechaInicio = new java.sql.Date(jdcFechaCorreccionInicio.getDate().getTime());
            java.sql.Date fechaFin = new java.sql.Date(jdcFechaCorreccionFin.getDate().getTime());
            parametros.put("nombreCliente", jtTablaDiarioCorrecion.getValueAt(0, 3).toString());
            parametros.put("fechaInicio", fechaInicio);
            parametros.put("fechaFin", fechaFin);

            if (tiendaAbono.equals("Todas")) {
                try {
                    reportMaker.ReportMaker reporte = new reportMaker.ReportMaker(HQL, "VentaTodos", parametros, false);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error generando el reporte: " + e, "Error", 0);
                }
            }
            if (!tiendaAbono.equals("Todas")) {

                try {
                    reportMaker.ReportMaker reporte = new reportMaker.ReportMaker(HQL, "VentaTiendaEspecifica", parametros, false);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error generando el reporte: " + e, "Error", 0);
                }
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "No hay resultados que imprimir");
        }

    }//GEN-LAST:event_btnPDFCreditosActionPerformed

    private void jpResumenComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpResumenComponentShown
        crearConsultaGlobal();
        crearResumen();
        String query = "FROM Sucursal s ORDER BY s.nombre";
        llenarCombo(cmbTiendaResumen, query, "local", true);
    }//GEN-LAST:event_jpResumenComponentShown

    private void btnSalirResumenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirResumenActionPerformed
        try {
            this.setClosed(true);
            System.gc();
        } catch (PropertyVetoException ex) {
            this.dispose();
            System.gc();
        }
    }//GEN-LAST:event_btnSalirResumenActionPerformed

    private void btnCorregirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCorregirActionPerformed
        if (jtTablaDiarioCorrecion.getSelectedRow() != -1) {

            String clave = jtTablaDiarioCorrecion.getValueAt(jtTablaDiarioCorrecion.getSelectedRow(), 0).toString();
            try {
                CorregirDiarioDeCaja corregirDiarioDeCaja = new CorregirDiarioDeCaja(clave);
                if (exist(corregirDiarioDeCaja) == false) {
                    CPanel.desktop.add(corregirDiarioDeCaja);
                    corregirDiarioDeCaja.setVisible(true);
                    corregirDiarioDeCaja.setLocation((CPanel.desktop.getWidth() - corregirDiarioDeCaja.getWidth()) / 2,
                            (CPanel.desktop.getHeight() - corregirDiarioDeCaja.getHeight()) / 2);
                } else {
                    corregirDiarioDeCaja.dispose();
                }
            } catch (Exception ex) {

            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona un registro de la "
                    + "lista para poder corregir.", "Registro no seleccionado", 0);
        }
    }//GEN-LAST:event_btnCorregirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if (jtTablaDiarioCorrecion.getSelectedRow() != -1) {
            int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea eliminar esta venta?", "Confirmar eliminación", 0, 3);
            if (respuesta == 0) {
                try {
                    DAOUniversalHibernate acceso = new DAOUniversalHibernate();
                    int clave = (int) jtTablaDiarioCorrecion.getValueAt(jtTablaDiarioCorrecion.getSelectedRow(), 0);
                    String query = "FROM Diariocaja d WHERE d.idDiarioCaja = '" + clave + "'";
                    Diariocaja venta = (Diariocaja) acceso.select(query).get(0);
                    acceso.delete(venta);
                    crearConsultaGlobal();
                    cargaTabla(jtTablaDiarioCorrecion, HQL, "Diariocaja");
                    lblVentasConNota.setText(String.valueOf(getVentasConNota()));
                    JOptionPane.showMessageDialog(this, "Venta eliminada correctamente", "Cancelado", 1);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + e, "Error", 0);
                    System.gc();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona un registro de la "
                    + "lista para poder borrar.", "Registro no seleccionado", 0);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtVentaConNotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVentaConNotaKeyTyped
        char key = evt.getKeyChar();
        if (((key < '0') || (key > '9')) && (key != evt.VK_BACK_SPACE)
                && (key != '.')) {
            evt.consume();
        }
        if (key == '.' && txtVentaConNota.getText().contains(".")) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Solo se permite un punto "
                    + "este campo", "Validacion decimal", 0);
        }
    }//GEN-LAST:event_txtVentaConNotaKeyTyped

    private void txtVentaSinNotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVentaSinNotaKeyTyped
        char key = evt.getKeyChar();
        if (((key < '0') || (key > '9')) && (key != evt.VK_BACK_SPACE)
                && (key != '.')) {
            evt.consume();
        }
        if (key == '.' && txtVentaSinNota.getText().contains(".")) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Solo se permite un punto "
                    + "este campo", "Validacion decimal", 0);
        }
    }//GEN-LAST:event_txtVentaSinNotaKeyTyped

    private void txtCreditoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCreditoKeyTyped
        char key = evt.getKeyChar();
        if (((key < '0') || (key > '9')) && (key != evt.VK_BACK_SPACE)
                && (key != '.')) {
            evt.consume();
        }
        if (key == '.' && txtCredito.getText().contains(".")) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Solo se permite un punto "
                    + "este campo", "Validacion decimal", 0);
        }
    }//GEN-LAST:event_txtCreditoKeyTyped

    private void txtGastosDeVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGastosDeVentaKeyTyped
        char key = evt.getKeyChar();
        if (((key < '0') || (key > '9')) && (key != evt.VK_BACK_SPACE)
                && (key != '.')) {
            evt.consume();
        }
        if (key == '.' && txtGastosDeVenta.getText().contains(".")) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Solo se permite un punto "
                    + "este campo", "Validacion decimal", 0);
        }
    }//GEN-LAST:event_txtGastosDeVentaKeyTyped

    private void btnCorregirConcepto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCorregirConcepto1ActionPerformed
        if (jtLocal.getSelectedRow() != -1) {
            int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea editar este local?", "Confirmar editar", 0, 3);
            if (respuesta == 0) {
                try {
                    DAOUniversalHibernate acceso = new DAOUniversalHibernate();
                    int clave = (int) jtLocal.getValueAt(jtLocal.getSelectedRow(), 0);
                    String query = "From Sucursal s WHERE s.idSucursal = '" + clave + "'";
                    Sucursal concepto = (Sucursal) acceso.select(query).get(0);
                    String nombre = JOptionPane.showInputDialog(this, "Nuevo nombre");
                    concepto.setNombre(nombre);
                    acceso.Update(concepto);
                    query = "From Sucursal s ORDER BY s.idSucursal";
                    llenarTabla(jtLocal, "Sucursal", query);
                    JOptionPane.showMessageDialog(this, "Sucursal editada correctamente", "Cancelado", 1);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + e, "Error", 0);
                    System.gc();
                }
            }
        }
    }//GEN-LAST:event_btnCorregirConcepto1ActionPerformed

    private void btnEliminarLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarLocalActionPerformed
        if (jtLocal.getSelectedRow() != -1) {
            int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea eliminar este local?", "Confirmar eliminación", 0, 3);
            if (respuesta == 0) {
                try {
                    DAOUniversalHibernate acceso = new DAOUniversalHibernate();
                    int clave = (int) jtLocal.getValueAt(jtLocal.getSelectedRow(), 0);
                    String query = "From Sucursal s WHERE s.idSucursal = '" + clave + "'";
                    Sucursal concepto = (Sucursal) acceso.select(query).get(0);
                    acceso.delete(concepto);
                    crearConsultaGlobal();
                    llenarTabla(jtLocal, "Sucursal", query);
                    JOptionPane.showMessageDialog(this, "Sucursal eliminada correctamente", "Cancelado", 1);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + e, "Error", 0);
                    System.gc();
                }
            }
        }
    }//GEN-LAST:event_btnEliminarLocalActionPerformed
    private void llenarTabla(JTable jtTabla, String nombreTabla, String consulta) {
        DAOUniversalHibernate acceso = new DAOUniversalHibernate();
        jtTabla.setVisible(false);
        jtTabla.removeAll();
        //_________________________ NOMBRE DE LA TABLA, CONSULTA
        jtTabla.setModel(acceso.retornaModelo(nombreTabla, consulta));
        jtTabla.setVisible(true);
    }

    private void limpiarCampos() {
        txtProveedorNuevo.setText("");
        txtClienteNuevo.setText("");
        txtLocalNuevo.setText("");
        txtConceptoNuevo.setText("");
    }

    private void btnNuevoLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoLocalActionPerformed
        DAOUniversalHibernate control = new DAOUniversalHibernate();
        try {
            if (!txtLocalNuevo.getText().isEmpty()) {
                pojos.Sucursal local = new pojos.Sucursal();
                local.setNombre(txtLocalNuevo.getText());
                control.add(local);

                limpiarCampos();
                JOptionPane.showMessageDialog(this, "Local registrado correctamente", "Datos registrados", 1);
                String Query = "";
                Query = "FROM Sucursal s ORDER BY s.nombre";
                cargaTabla(jtLocal, Query, "Sucursal");
            } else {
                JOptionPane.showMessageDialog(this, "Favor de llenar el campo Nombre", "Datos incompletos", 1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Error", 0);
        }
    }//GEN-LAST:event_btnNuevoLocalActionPerformed

    private void btnNuevoConceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoConceptoActionPerformed
        DAOUniversalHibernate control = new DAOUniversalHibernate();
        try {
            if (!txtConceptoNuevo.getText().isEmpty()) {
                pojos.Linea concepto = new pojos.Linea();
                concepto.setNombre(txtConceptoNuevo.getText());
                control.add(concepto);
                limpiarCampos();
                JOptionPane.showMessageDialog(this, "Concepto registrado correctamente", "Datos registrados", 1);
                String Query = "FROM Linea l ORDER BY l.nombre";
                cargaTabla(jtConceptos, Query, "Linea");
            } else {
                JOptionPane.showMessageDialog(this, "Favor de llenar el campo Nombre", "Datos incompletos", 1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Error", 0);
        }
    }//GEN-LAST:event_btnNuevoConceptoActionPerformed

    private void txtConceptoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConceptoNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConceptoNuevoActionPerformed

    private void btnEditarConceptosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarConceptosActionPerformed
        if (jtConceptos.getSelectedRow() != -1) {
            int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea editar este concepto?", "Confirmar editar", 0, 3);
            if (respuesta == 0) {
                try {
                    DAOUniversalHibernate acceso = new DAOUniversalHibernate();
                    int clave = (int) jtConceptos.getValueAt(jtConceptos.getSelectedRow(), 0);
                    String query = "From Linea l WHERE l.idLinea = '" + clave + "'";
                    Linea concepto = (Linea) acceso.select(query).get(0);
                    String nombre = JOptionPane.showInputDialog(this, "Nuevo nombre");
                    concepto.setNombre(nombre);
                    acceso.Update(concepto);
                    query = "From Linea s ORDER BY s.idLinea";
                    llenarTabla(jtConceptos, "Linea", query);
                    JOptionPane.showMessageDialog(this, "Concepto editado correctamente", "Cancelado", 1);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + e, "Error", 0);
                    System.gc();
                }
            }
        }
    }//GEN-LAST:event_btnEditarConceptosActionPerformed

    private void btnBorrarConceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarConceptoActionPerformed
        if (jtConceptos.getSelectedRow() != -1) {
            int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea eliminar este concepto?", "Confirmar eliminación", 0, 3);
            if (respuesta == 0) {
                try {
                    DAOUniversalHibernate acceso = new DAOUniversalHibernate();
                    int clave = (int) jtConceptos.getValueAt(jtConceptos.getSelectedRow(), 0);
                    String query = "From Linea l WHERE l.idLinea = '" + clave + "'";
                    Linea linea = (Linea) acceso.select(query).get(0);
                    acceso.delete(linea);
                    crearConsultaGlobal();
                    llenarTabla(jtLocal, "Linea", query);
                    JOptionPane.showMessageDialog(this, "Concepto eliminado correctamente", "Cancelado", 1);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + e, "Error", 0);
                    System.gc();
                }
            }
        }
    }//GEN-LAST:event_btnBorrarConceptoActionPerformed

    private void btnCorregirProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCorregirProveedorActionPerformed
        if (jtProveedor.getSelectedRow() != -1) {
            int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea editar este proveedor?", "Confirmar editar", 0, 3);
            if (respuesta == 0) {
                try {
                    DAOUniversalHibernate acceso = new DAOUniversalHibernate();
                    int clave = (int) jtProveedor.getValueAt(jtProveedor.getSelectedRow(), 0);
                    String query = "From Proveedores s WHERE s.idProveedor = '" + clave + "'";
                    Proveedores proveedor = (Proveedores) acceso.select(query).get(0);
                    String nombre = JOptionPane.showInputDialog(this, "Nuevo nombre");
                    proveedor.setNombre(nombre);
                    acceso.Update(proveedor);
                    query = "From Proveedores s ORDER BY s.idProveedor";
                    llenarTabla(jtProveedor, "Proveedor", query);
                    JOptionPane.showMessageDialog(this, "Proveedor editada correctamente", "Cancelado", 1);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + e, "Error", 0);
                    System.gc();
                }
            }
        }
    }//GEN-LAST:event_btnCorregirProveedorActionPerformed

    private void btnEliminarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProveedorActionPerformed
        if (jtProveedor.getSelectedRow() != -1) {
            int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea eliminar este proveedor?", "Confirmar eliminación", 0, 3);
            if (respuesta == 0) {
                try {
                    DAOUniversalHibernate acceso = new DAOUniversalHibernate();
                    int clave = (int) jtProveedor.getValueAt(jtProveedor.getSelectedRow(), 0);
                    String query = "From Proveedores s WHERE s.idProveedor = '" + clave + "'";
                    Proveedores proveedor = (Proveedores) acceso.select(query).get(0);
                    acceso.delete(proveedor);
                    crearConsultaGlobal();
                    llenarTabla(jtProveedor, "Proveedor", query);
                    JOptionPane.showMessageDialog(this, "Proveedor eliminada correctamente", "Cancelado", 1);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + e, "Error", 0);
                    System.gc();
                }
            }
        }
    }//GEN-LAST:event_btnEliminarProveedorActionPerformed

    private void btnNuevoProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoProveedorActionPerformed
        DAOUniversalHibernate control = new DAOUniversalHibernate();
        try {
            if (!txtProveedorNuevo.getText().isEmpty()) {
                pojos.Proveedores proveedor = new pojos.Proveedores();
                proveedor.setNombre(txtProveedorNuevo.getText());
                control.add(proveedor);

                limpiarCampos();
                JOptionPane.showMessageDialog(this, "Proveedor registrado correctamente", "Datos registrados", 1);
                String Query = "";
                Query = "FROM Proveedores p ORDER BY p.nombre";
                cargaTabla(jtProveedor, Query, "Proveedor");
            } else {
                JOptionPane.showMessageDialog(this, "Favor de llenar el campo Nombre", "Datos incompletos", 1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Error", 0);
        }
    }//GEN-LAST:event_btnNuevoProveedorActionPerformed

    private void btnNuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoClienteActionPerformed
        DAOUniversalHibernate control = new DAOUniversalHibernate();
        try {
            if (!txtClienteNuevo.getText().isEmpty()) {
                pojos.Clientes cliente = new pojos.Clientes();
                cliente.setNombre(txtClienteNuevo.getText());
                control.add(cliente);

                limpiarCampos();
                JOptionPane.showMessageDialog(this, "Cliente registrado correctamente", "Datos registrados", 1);
                String Query = "";
                Query = "FROM Clientes c ORDER BY c.nombre";
                cargaTabla(jtClientes, Query, "Cliente");
            } else {
                JOptionPane.showMessageDialog(this, "Favor de llenar el campo Nombre", "Datos incompletos", 1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Error", 0);
        }
    }//GEN-LAST:event_btnNuevoClienteActionPerformed

    private void txtClienteNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteNuevoActionPerformed

    private void btnEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClienteActionPerformed
        if (jtClientes.getSelectedRow() != -1) {
            int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea editar este cliente?", "Confirmar editar", 0, 3);
            if (respuesta == 0) {
                try {
                    DAOUniversalHibernate acceso = new DAOUniversalHibernate();
                    int clave = (int) jtClientes.getValueAt(jtClientes.getSelectedRow(), 0);
                    String query = "From Clientes s WHERE s.idCliente = '" + clave + "'";
                    Clientes cliente = (Clientes) acceso.select(query).get(0);
                    String nombre = JOptionPane.showInputDialog(this, "Nuevo nombre");
                    cliente.setNombre(nombre);
                    acceso.Update(cliente);
                    query = "From Clientes c ORDER BY c.idCliente";
                    llenarTabla(jtClientes, "Cliente", query);
                    JOptionPane.showMessageDialog(this, "Cliente editada correctamente", "Cancelado", 1);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + e, "Error", 0);
                    System.gc();
                }
            }
        }
    }//GEN-LAST:event_btnEditarClienteActionPerformed

    private void btnBorrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarClienteActionPerformed
        if (jtClientes.getSelectedRow() != -1) {
            int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea eliminar este cliente?", "Confirmar eliminación", 0, 3);
            if (respuesta == 0) {
                try {
                    DAOUniversalHibernate acceso = new DAOUniversalHibernate();
                    int clave = (int) jtClientes.getValueAt(jtClientes.getSelectedRow(), 0);
                    String query = "From Clientes c WHERE c.idCliente = '" + clave + "'";
                    Clientes cliente = (Clientes) acceso.select(query).get(0);
                    acceso.delete(cliente);
                    crearConsultaGlobal();
                    llenarTabla(jtClientes, "Cliente", query);
                    JOptionPane.showMessageDialog(this, "Cliente eliminada correctamente", "Cancelado", 1);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + e, "Error", 0);
                    System.gc();
                }
            }
        }
    }//GEN-LAST:event_btnBorrarClienteActionPerformed

    private void jpProveedoresClientesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpProveedoresClientesComponentShown
        String Query = "";
        Query = "FROM Proveedores p ORDER BY p.nombre";
        cargaTabla(jtProveedor, Query, "Proveedor");
        Query = "FROM Clientes c ORDER BY c.nombre";
        cargaTabla(jtClientes, Query, "Cliente");
    }//GEN-LAST:event_jpProveedoresClientesComponentShown

    private void cmbConceptoLocalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbConceptoLocalesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbConceptoLocalesActionPerformed

    private void jpConceptosComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpConceptosComponentShown
        String query = "";
        query = "From Linea s ORDER BY s.idLinea";
        llenarTabla(jtConceptos, "Linea", query);
        query = "From Sucursal s ORDER BY s.idSucursal";
        llenarTabla(jtLocal, "Sucursal", query);
    }//GEN-LAST:event_jpConceptosComponentShown
    private void cargaTabla(final JTable jtTabla, String HQL, String Encabezado) {
        //Reviso si que la consulta no vaya vacia
        if (!HQL.isEmpty()) {
            DAOUniversalHibernate acceso = new DAOUniversalHibernate();
            jtTabla.setVisible(false);
            jtTabla.removeAll();
            jtTabla.setModel(acceso.retornaModelo(Encabezado, HQL));
            jtTabla.setVisible(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnotar;
    private javax.swing.JButton btnBorrarCliente;
    private javax.swing.JButton btnBorrarConcepto;
    private javax.swing.JButton btnBorrarCredito;
    private javax.swing.JButton btnCorregir;
    private javax.swing.JButton btnCorregirConcepto1;
    private javax.swing.JButton btnCorregirProveedor;
    private javax.swing.JButton btnEditarCliente;
    private javax.swing.JButton btnEditarConceptos;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarLocal;
    private javax.swing.JButton btnEliminarProveedor;
    private javax.swing.JButton btnNuevoCliente;
    private javax.swing.JButton btnNuevoConcepto;
    private javax.swing.JButton btnNuevoLocal;
    private javax.swing.JButton btnNuevoProveedor;
    private javax.swing.JButton btnPDFCreditos;
    private javax.swing.JButton btnRegistrarVentas;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSalirAbonos;
    private javax.swing.JButton btnSalirResumen;
    private javax.swing.JComboBox cmbConceptoLocales;
    private javax.swing.JComboBox cmbDiarioCorregir;
    private javax.swing.JComboBox cmbTiendaResumen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private com.toedter.calendar.JDateChooser jdcFechaCorreccionFin;
    private com.toedter.calendar.JDateChooser jdcFechaCorreccionInicio;
    private com.toedter.calendar.JDateChooser jdcFechaFinResumen;
    private com.toedter.calendar.JDateChooser jdcFechaInicioResumen;
    private com.toedter.calendar.JDateChooser jdcFechaRegistroDiario;
    private javax.swing.JPanel jpAbonos;
    private javax.swing.JPanel jpConceptos;
    private javax.swing.JPanel jpCreditos;
    private javax.swing.JPanel jpProveedoresClientes;
    private javax.swing.JPanel jpResumen;
    private javax.swing.JScrollPane jsProvedorCliente;
    private javax.swing.JTable jtClientes;
    private javax.swing.JTable jtConceptos;
    private javax.swing.JTable jtLocal;
    private javax.swing.JTable jtProveedor;
    private javax.swing.JTable jtTablaDiarioCorrecion;
    private javax.swing.JTable jtTablaDiarioRegistro;
    private javax.swing.JTabbedPane jtpDiario;
    private javax.swing.JLabel lblAbonosCredito;
    private javax.swing.JLabel lblGastosDeVenta;
    private javax.swing.JLabel lblLocal;
    private javax.swing.JLabel lblLocal1;
    private javax.swing.JLabel lblLocal3;
    private javax.swing.JLabel lblLocal4;
    private javax.swing.JLabel lblTituloResultados;
    private javax.swing.JLabel lblTotalDeVentas;
    private javax.swing.JLabel lblUtilidadCajas;
    private javax.swing.JLabel lblVentaSinNota;
    private javax.swing.JLabel lblVentasConNota;
    private javax.swing.JTextField txtClienteNuevo;
    private javax.swing.JTextField txtConceptoNuevo;
    private javax.swing.JTextField txtCredito;
    private javax.swing.JTextField txtGastosDeVenta;
    private javax.swing.JTextField txtLocalNuevo;
    private javax.swing.JTextField txtNotas;
    private javax.swing.JTextField txtProveedorNuevo;
    private javax.swing.JTextField txtVentaConNota;
    private javax.swing.JTextField txtVentaSinNota;
    // End of variables declaration//GEN-END:variables
}
