/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import controlBD.DAOUniversalHibernate;
import java.awt.event.KeyEvent;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import pojos.Mantenimiento;

/**
 *
 * @author Daniel
 */
public class CatalogoMtoVehicular extends javax.swing.JInternalFrame {

    /**
     * Creates new form CatalogoMtoVehicular
     */
    public CatalogoMtoVehicular() {
        initComponents();
        String query = "";
        query = "From Mantenimiento m ORDER BY m.idMantenimiento";
        cargaTabla(jtMantenimiento, query, "Mantenimiento", 1);
    }

    private void cargaTabla(final JTable jtTabla, String HQL, String Encabezado, int NoColOcultar) {
        //Reviso si que la consulta no vaya vacia
        if (!HQL.isEmpty()) {
            DAOUniversalHibernate acceso = new DAOUniversalHibernate();
            jtTabla.setVisible(false);
            jtTabla.removeAll();
            jtTabla.setModel(acceso.retornaModelo(Encabezado, HQL));
            TableColumn column = null;
            for (int i = 0; i < NoColOcultar; i++) {
                column = jtTabla.getColumnModel().getColumn(i);
                column.setMaxWidth(10);
            }
            jtTabla.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpMantenimiento = new javax.swing.JPanel();
        jLabel112 = new javax.swing.JLabel();
        jScrollPane19 = new javax.swing.JScrollPane();
        jtMantenimiento = new javax.swing.JTable();
        txtMantenimiento = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel113 = new javax.swing.JLabel();
        jLabel114 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("TIPOS DE MANTENIMIENTO Y REPARACIONES");

        jpMantenimiento.setBackground(new java.awt.Color(255, 255, 255));
        jpMantenimiento.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpMantenimientoComponentShown(evt);
            }
        });

        jLabel112.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel112.setForeground(new java.awt.Color(102, 102, 102));
        jLabel112.setText("TIPOS DE MANTENIMIENTO Y REPARACIONES");

        jtMantenimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtMantenimiento.setToolTipText("Elije uno, ENTER para cambiar, SUPRIMIR para borrar");
        jtMantenimiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtMantenimientoKeyPressed(evt);
            }
        });
        jScrollPane19.setViewportView(jtMantenimiento);

        txtMantenimiento.setToolTipText("Escribe el concepto, luego da enter");
        txtMantenimiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMantenimientoKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconosGenerales/car3.png"))); // NOI18N

        jLabel113.setFont(new java.awt.Font("Comic Sans MS", 1, 10)); // NOI18N
        jLabel113.setForeground(new java.awt.Color(102, 102, 102));
        jLabel113.setText("TEXTO + ENTER = NUEVO");

        jLabel114.setFont(new java.awt.Font("Comic Sans MS", 1, 10)); // NOI18N
        jLabel114.setForeground(new java.awt.Color(102, 102, 102));
        jLabel114.setText("TABLA + ENTER = CAMBIAR");

        jLabel115.setFont(new java.awt.Font("Comic Sans MS", 1, 10)); // NOI18N
        jLabel115.setForeground(new java.awt.Color(102, 102, 102));
        jLabel115.setText("TABLA + SUPR   = BORRAR");

        jLabel116.setFont(new java.awt.Font("Comic Sans MS", 1, 10)); // NOI18N
        jLabel116.setForeground(new java.awt.Color(102, 102, 102));
        jLabel116.setText("<---------------------");

        jLabel117.setFont(new java.awt.Font("Comic Sans MS", 1, 10)); // NOI18N
        jLabel117.setForeground(new java.awt.Color(102, 102, 102));
        jLabel117.setText("<---------------------");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel114, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(jLabel115, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel116, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel117, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel113, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel113)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel117)
                .addGap(51, 51, 51)
                .addComponent(jLabel114)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel115)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel116)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jpMantenimientoLayout = new javax.swing.GroupLayout(jpMantenimiento);
        jpMantenimiento.setLayout(jpMantenimientoLayout);
        jpMantenimientoLayout.setHorizontalGroup(
            jpMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMantenimientoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                    .addComponent(txtMantenimiento)
                    .addComponent(jLabel112, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpMantenimientoLayout.setVerticalGroup(
            jpMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMantenimientoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpMantenimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpMantenimientoLayout.createSequentialGroup()
                        .addComponent(jLabel112)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 676, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpMantenimiento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 482, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpMantenimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void llenarTabla(JTable jtTabla, String nombreTabla, String consulta) {
        DAOUniversalHibernate acceso = new DAOUniversalHibernate();
        jtTabla.setVisible(false);
        jtTabla.removeAll();
        //_________________________ NOMBRE DE LA TABLA, CONSULTA
        jtTabla.setModel(acceso.retornaModelo(nombreTabla, consulta));
        jtTabla.setVisible(true);
    }    private void limpiarCampos() {
        this.txtMantenimiento.setText("");
    }
    private void jpMantenimientoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpMantenimientoComponentShown
        String query = "";
        query = "From Mantenimiento m ORDER BY m.idMantenimiento";
        cargaTabla(jtMantenimiento, query, "Mantenimiento", 1);
    }//GEN-LAST:event_jpMantenimientoComponentShown

    private void txtMantenimientoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMantenimientoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DAOUniversalHibernate control = new DAOUniversalHibernate();
            try {
                if (!txtMantenimiento.getText().isEmpty()) {
                    pojos.Mantenimiento mantenimiento = new pojos.Mantenimiento();
                    mantenimiento.setMantenimiento(txtMantenimiento.getText());
                    control.add(mantenimiento);
                    limpiarCampos();
                    String Query = "FROM Mantenimiento m ORDER BY m.mantenimiento";
                    cargaTabla(jtMantenimiento, Query, "Mantenimiento", 1);
                } else {
                    JOptionPane.showMessageDialog(this, "Favor de llenar el campo Nombre", "Datos incompletos", 1);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e, "Error", 0);
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMantenimientoKeyPressed

    private void jtMantenimientoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtMantenimientoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jtMantenimiento.getSelectedRow() != -1) {
                int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea editar este concepto?", "Confirmar editar", 0, 3);
                if (respuesta == 0) {
                    try {
                        DAOUniversalHibernate acceso = new DAOUniversalHibernate();
                        int clave = (int) jtMantenimiento.getValueAt(jtMantenimiento.getSelectedRow(), 0);
                        String query = "From Mantenimiento l WHERE l.idMantenimiento = '" + clave + "'";
                        Mantenimiento concepto = (Mantenimiento) acceso.select(query).get(0);
                        String nombre = JOptionPane.showInputDialog(this, "Nuevo nombre");
                        concepto.setMantenimiento(nombre);
                        acceso.Update(concepto);
                        query = "From Mantenimiento m ORDER BY m.mantenimiento";
                        cargaTabla(jtMantenimiento, query, "Mantenimiento", 1);
                        JOptionPane.showMessageDialog(this, "Concepto editado correctamente", "Cancelado", 1);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + e, "Error", 0);
                        System.gc();
                    }
                }
            }
        }
        //-------------------------------------------------------------------------->
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            if (jtMantenimiento.getSelectedRow() != -1) {
                int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea eliminar este concepto?", "Confirmar eliminación", 0, 3);
                if (respuesta == 0) {
                    try {
                        DAOUniversalHibernate acceso = new DAOUniversalHibernate();
                        int clave = (int) jtMantenimiento.getValueAt(jtMantenimiento.getSelectedRow(), 0);
                        String query = "From Mantenimiento v WHERE v.idMantenimiento='" + clave + "'";
                        Mantenimiento concepto = (Mantenimiento) acceso.select(query).get(0);
                        acceso.delete(concepto);
                        query = "From Mantenimiento v";
                        llenarTabla(jtMantenimiento, "Mantenimiento", query);
                        JOptionPane.showMessageDialog(this, "Concepto eliminado correctamente", "Cancelado", 1);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Ha ocurrido un error: " + e, "Error", 0);
                        System.gc();
                    }
                }
            }
        }
    }//GEN-LAST:event_jtMantenimientoKeyPressed

    public boolean exist(JInternalFrame frame) throws Exception {

        try {
            JInternalFrame iframes[] = CPanel.desktop.getAllFrames();
            for (int i = 0; i < iframes.length; i++) {
                if (iframes[i].getTitle().equals(frame.getTitle())) {
                    iframes[i].moveToFront();
                    iframes[i].setSelected(true);
                    iframes[i].setLocation((CPanel.desktop.getWidth() - iframes[i].getWidth()) / 2,
                            (CPanel.desktop.getHeight() - iframes[i].getHeight()) / 2);
                    return true;
                }
            }
        } catch (Exception e) {
            throw e;
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JPanel jpMantenimiento;
    private javax.swing.JTable jtMantenimiento;
    private javax.swing.JTextField txtMantenimiento;
    // End of variables declaration//GEN-END:variables
}
